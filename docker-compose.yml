version: "3.9"

services:
  web:
    build: .
    env_file:
      - ./docker-app/env
    restart: unless-stopped
    volumes:
      - .:/code
    command:
      - run_web
    depends_on:
      - db
      - redis
      - rabbit
      - haproxy
    links:
      - db
      - redis
      - rabbit
      - db-slave-1
      - db-slave-2
      - haproxy

  web-2:
    build: .
    env_file:
      - ./docker-app/env
    restart: unless-stopped
    volumes:
      - .:/code
    command:
      - run_web
    depends_on:
      - db
      - redis
      - rabbit
      - haproxy
    links:
      - db
      - redis
      - rabbit
      - db-slave-1
      - db-slave-2
      - haproxy

  consumers:
    container_name: posts_consumer
    build: .
    env_file:
      - ./docker-app/env
    command:
      - run_consumer
    restart: unless-stopped
    volumes:
      - .:/code
    depends_on:
      - db
      - redis
      - rabbit
    links:
      - db
      - redis
      - rabbit
  db:
    image: "mysql:8.0"
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: social_network
      MYSQL_USER: user 
      MYSQL_PASSWORD: user_password
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/mysql.cnf:/etc/mysql/conf.d/my.cnf
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE

  db-slave-1:
    image: "mysql:8.0"
    restart: unless-stopped
    command: ["mysqld", "--server-id=2"]
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: social_network
      MYSQL_USER: user
      MYSQL_PASSWORD: user_password
    volumes:
      - ./mysql/mysql_slave.cnf:/etc/mysql/conf.d/my.cnf
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE

  db-slave-2:
    image: "mysql:8.0"
    restart: unless-stopped
    command: ["mysqld", "--server-id=3"]
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: social_network
      MYSQL_USER: user
      MYSQL_PASSWORD: user_password
    volumes:
      - ./mysql/mysql_slave.cnf:/etc/mysql/conf.d/my.cnf
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE

  haproxy:
    image: haproxy:2.4
    user: root
    hostname: haproxy
    container_name: haproxy-lb
    restart: unless-stopped
    volumes:
      - "./docker-app/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg"
    ports:
      - "3307:3306"
      - "8404:8404"
    depends_on:
      - db-slave-2
      - db-slave-1
    links:
      - db-slave-1
      - db-slave-2

  nginx:
    restart: unless-stopped
    image: nginx:stable-alpine
    ports:
      - "0.0.0.0:80:80"
    volumes:
      - "./docker-app/nginx/balancing.conf:/etc/nginx/conf.d/default.conf:rw"
    links:
      - web:web
    depends_on:
      - web
      - web-2

  redis:
    restart: unless-stopped
    image: redis:latest
    ports:
      - "6379:6379"

  rabbit:
    restart: unless-stopped
    image: rabbitmq:3.10.0
    ports:
      - "5672:5672"
      - "15672:15672"
      - "5671:5671"

#   tarantool:
#     image: tarantool/tarantool:1.10.13
#     ports:
#       - "3301:3301"
#       - "3302:3302"
#     volumes:
#       - ./in_memory_db/tarantool/init# .lua:/opt/tarantool/init.lua
#
#   mysql_to_tarantool:
#     restart: unless-stopped
#     # image: avpgenium/mysql-tarantool-replication:latest
#     build:
#       context: ./in_memory_db/mysql-tarantool-replication
#     depends_on:
#       - tarantool
#       - db
#     links:
#       - tarantool
#       - db
